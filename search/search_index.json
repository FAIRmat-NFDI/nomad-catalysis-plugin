{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Welcome to the nomad-catalysis documentation \u00b6 This is the documentation for the NOMAD plugin for heterogeneous catalysis data. It provides an overview of the supported entry types, their sub-sections and quantities and a guide of how to use the plugin and effectively manage and share catalysis research data in NOMAD. This plugin was developed as part of Task Area E2 \"Heterogeneous Catalysis\" of the FAIRmat project within the German National Research Data Infrastucture ( NFDI ). The release v1.0.2 is part of the central NOMAD repository deployment. The latest features of the main branch can be tested in the Example Oasis provided by FAIRmat/NOMAD-lab. NOMAD facilitates the collection, storage, analysis and dissemination of research data, adhering to the principles of FAIR (Findable, Accessible, Interoperable, and Reusable) data management. Introduction \u00b6 This plugin aims at facilitating the catalysis researcher's life by providing a flexible tool to manage, visualize, analyze and share catalyst and reactivity data. It is still in development and feedback about the plugin and documentation is always welcome. Included Entry Types \u00b6 This plugin includes the following NOMAD entry types: - CatalystSample - CatalyticReaction - CatalysisCollectionParserEntry More information can be found in the References and the How-to guides . How-to guides \u00b6 How-to guides provide step-by-step instructions for a wide range of tasks, with the overarching topics: Install this plugin Create catalysis related entries Search catalysis data Reference \u00b6 The reference section includes a list of all sections and their quantities, as well as the necessary format for the possible datafiles of the catalytic reaction. About NOMAD \u00b6 NOMAD is an open-source data management platform tailored for materials science, designed to follow the FAIR principles. It offers a robust framework for managing and sharing materials data in a standardized and interoperable manner. To learn more about NOMAD, visit the official homepage . We hope this documentation provides all the information you need to make the most of the NOMAD Catalysis Plugin. Feel free to contact us for further questions, either via opening an issue in the github repository , asking in the NOMAD Discord channel, or reaching out directly to the FAIRmat project(https://www.fairmat-nfdi.eu/fairmat/about-fairmat/contact-fairmat).","title":"Home"},{"location":"index.html#welcome-to-the-nomad-catalysis-documentation","text":"This is the documentation for the NOMAD plugin for heterogeneous catalysis data. It provides an overview of the supported entry types, their sub-sections and quantities and a guide of how to use the plugin and effectively manage and share catalysis research data in NOMAD. This plugin was developed as part of Task Area E2 \"Heterogeneous Catalysis\" of the FAIRmat project within the German National Research Data Infrastucture ( NFDI ). The release v1.0.2 is part of the central NOMAD repository deployment. The latest features of the main branch can be tested in the Example Oasis provided by FAIRmat/NOMAD-lab. NOMAD facilitates the collection, storage, analysis and dissemination of research data, adhering to the principles of FAIR (Findable, Accessible, Interoperable, and Reusable) data management.","title":"Welcome to the nomad-catalysis documentation"},{"location":"index.html#introduction","text":"This plugin aims at facilitating the catalysis researcher's life by providing a flexible tool to manage, visualize, analyze and share catalyst and reactivity data. It is still in development and feedback about the plugin and documentation is always welcome.","title":"Introduction"},{"location":"index.html#included-entry-types","text":"This plugin includes the following NOMAD entry types: - CatalystSample - CatalyticReaction - CatalysisCollectionParserEntry More information can be found in the References and the How-to guides .","title":"Included Entry Types"},{"location":"index.html#how-to-guides","text":"How-to guides provide step-by-step instructions for a wide range of tasks, with the overarching topics: Install this plugin Create catalysis related entries Search catalysis data","title":"How-to guides"},{"location":"index.html#reference","text":"The reference section includes a list of all sections and their quantities, as well as the necessary format for the possible datafiles of the catalytic reaction.","title":"Reference"},{"location":"index.html#about-nomad","text":"NOMAD is an open-source data management platform tailored for materials science, designed to follow the FAIR principles. It offers a robust framework for managing and sharing materials data in a standardized and interoperable manner. To learn more about NOMAD, visit the official homepage . We hope this documentation provides all the information you need to make the most of the NOMAD Catalysis Plugin. Feel free to contact us for further questions, either via opening an issue in the github repository , asking in the NOMAD Discord channel, or reaching out directly to the FAIRmat project(https://www.fairmat-nfdi.eu/fairmat/about-fairmat/contact-fairmat).","title":"About NOMAD"},{"location":"how_to/contribute_to_this_plugin.html","text":"Contribute to This Plugin \u00b6 Contributions to the development of the catalysis plugin are highly welcome. If you have example datasets you want to publish or general feedback and suggestions to improve the plugin, please get in touch by opening an issue in the plugin repository or sending and email. Contribute to the documentation \u00b6 If you want to contribute to the documentation, please create an issue in the repo or get in touch with the authors.","title":"Contribute to this plugin"},{"location":"how_to/contribute_to_this_plugin.html#contribute-to-this-plugin","text":"Contributions to the development of the catalysis plugin are highly welcome. If you have example datasets you want to publish or general feedback and suggestions to improve the plugin, please get in touch by opening an issue in the plugin repository or sending and email.","title":"Contribute to This Plugin"},{"location":"how_to/contribute_to_this_plugin.html#contribute-to-the-documentation","text":"If you want to contribute to the documentation, please create an issue in the repo or get in touch with the authors.","title":"Contribute to the documentation"},{"location":"how_to/install_this_plugin.html","text":"Install This Plugin \u00b6 To include this plugin as part of your local or institutional NOMAD Oasis the following line needs to be added to the pyproject.toml file of the Oasis repo: git+https://github.com/FAIRmat-NFDI/nomad-catalysis-plugin.git@main For a detailed guide on how to setup and install a new Oasis, see the Tutorial 13 part 4 Add This Plugin to Your NOMAD installation \u00b6 Read the NOMAD plugin documentation for all details on how to deploy the plugin on your NOMAD instance.","title":"Install this Plugin"},{"location":"how_to/install_this_plugin.html#install-this-plugin","text":"To include this plugin as part of your local or institutional NOMAD Oasis the following line needs to be added to the pyproject.toml file of the Oasis repo: git+https://github.com/FAIRmat-NFDI/nomad-catalysis-plugin.git@main For a detailed guide on how to setup and install a new Oasis, see the Tutorial 13 part 4","title":"Install This Plugin"},{"location":"how_to/install_this_plugin.html#add-this-plugin-to-your-nomad-installation","text":"Read the NOMAD plugin documentation for all details on how to deploy the plugin on your NOMAD instance.","title":"Add This Plugin to Your NOMAD installation"},{"location":"how_to/search_catalysis_data.html","text":"How to Search Catalysis Data \u00b6 This plugin provides a dedicated heterogeneous catalysis app which makes it possible to get a quick overview of related entries, visualize results and search for specific information. The catalysis app of the central NOMAD service can be accessed here . The app has 3 main components: the filter menu on the left, the dashboard in the center, and the entry list below the dashboard. Dashboard \u00b6 The quick entry to exploring the catalysis data in the NOMAD database is the dashboard. It prominently features the periodic table of the elements indicating the elemental composition of the catalyst sample entries and of the materials tested in catalytic reactions. Furthermore there are windows, so-called \"Widgets\", displaying the catalytic reactions, reactants and products which were uploaded into NOMAD. At the bottom there are two default scatterplots which give an idea about the temperature range, feed composition and achived conversions in the catalytic reactions tested. Filter Menu \u00b6 The Filter Menu allows to quickly access a number of properties conveniently grouped under the main menu items \"Catalyst Materials\" and \"Reactions\" each with further submenu items. Upon clicking one of the menu headings a panel with the properties opens. Each property comes with a window displaying the most common occurances in the database and also a search bar to search for other less common instances. In addition to getting a quick overview of the data in the database, these windows can be used to filter and search specific data entries as well. Result Entry List \u00b6 Below the dashboard there is the search results list, which gives direct access to the individual data entries which fit the applied filter criteria, along with some further key information about the entries. Custom Search \u00b6 At the top of the page, there is the searchbar for direct filter and search, as well as buttons to create your own, custom widgets.","title":"Search for Catalysis Data in the App"},{"location":"how_to/search_catalysis_data.html#how-to-search-catalysis-data","text":"This plugin provides a dedicated heterogeneous catalysis app which makes it possible to get a quick overview of related entries, visualize results and search for specific information. The catalysis app of the central NOMAD service can be accessed here . The app has 3 main components: the filter menu on the left, the dashboard in the center, and the entry list below the dashboard.","title":"How to Search Catalysis Data"},{"location":"how_to/search_catalysis_data.html#dashboard","text":"The quick entry to exploring the catalysis data in the NOMAD database is the dashboard. It prominently features the periodic table of the elements indicating the elemental composition of the catalyst sample entries and of the materials tested in catalytic reactions. Furthermore there are windows, so-called \"Widgets\", displaying the catalytic reactions, reactants and products which were uploaded into NOMAD. At the bottom there are two default scatterplots which give an idea about the temperature range, feed composition and achived conversions in the catalytic reactions tested.","title":"Dashboard"},{"location":"how_to/search_catalysis_data.html#filter-menu","text":"The Filter Menu allows to quickly access a number of properties conveniently grouped under the main menu items \"Catalyst Materials\" and \"Reactions\" each with further submenu items. Upon clicking one of the menu headings a panel with the properties opens. Each property comes with a window displaying the most common occurances in the database and also a search bar to search for other less common instances. In addition to getting a quick overview of the data in the database, these windows can be used to filter and search specific data entries as well.","title":"Filter Menu"},{"location":"how_to/search_catalysis_data.html#result-entry-list","text":"Below the dashboard there is the search results list, which gives direct access to the individual data entries which fit the applied filter criteria, along with some further key information about the entries.","title":"Result Entry List"},{"location":"how_to/search_catalysis_data.html#custom-search","text":"At the top of the page, there is the searchbar for direct filter and search, as well as buttons to create your own, custom widgets.","title":"Custom Search"},{"location":"how_to/use_this_plugin.html","text":"How to Create Catalysis Entries \u00b6 To create one or more entries in NOMAD through the browser, the user first has to navigate to the \u201cPUBLISH\u201d tab, log into their account (if applicable), then click \u201cCREATE A NEW UPLOAD\u201d. Here, there are 4 main ways to create catalysis entries in the NOMAD / NOMAD Oasis: using the catalysis parser functionality by uploading template conform tables (in csv or xlsx format) manually via the graphical user interface (GUI) using NOMADs ELN functionality dropping archive.json files directly in an upload using the tabular parser, for creating more customized entries and when the data has already been collected in csv or xlsx files First, I will detail how to create entries using the excel parser and explain the structure of the schemas. Later I will add, how to add larger datasets more quickly. 1. Using the catalysis parser \u00b6 The easiest way to generate a number of entries at once is by dropping tabular files (csv/xlsx), which adhere to a provided template format and naming convention into an upload in NOMAD. Templates are provided in the following to generate one or more sample entries from a *CatalystSampleCollection.xlsx file , one or more catalytic measurements in *CatalyticReactionCollection.xlsx file , or for both sample and measurement data in one file as a *CatalysisCollection.xlsx file . For catalytic reactions with e.g. longer time or measurement series one can also upload a *CatalyticReaction.xlsx file directly, or specify the reaction file in a datafile column of a *Collection.xlsx file to add multiple entries at once. Then there are no restrictions on the file name. (For all purposes mentioned here, csv files should work the same as xlsx files.) 2. Manual creation of entries from the GUI \u00b6 When creating single entries, it may be easiest to manually fill the schemas in the GUI. In the Create from Schema pop-up window one can select a built-in schema from the EntryData Category Catalysis . After entering a unique name for the entry (unique at least within the upload folder) one can create an instance of the selected schema, either a catalyst sample entry or a measurement of a functional catalyst analysis. The Catalyst Sample schema \u00b6 Below you see a fresh instance of a Catalyst Sample entry, which can be filled directly in the GUI. The Catalytic Reaction schema \u00b6 Here you see a screenshot of an empty Catalytic Reaction measurement entry. Populate the CatalyticReaction schema from a data file \u00b6 Currently two types of data files are recognized in the data_file quantity and information is extracted directly to populate the CatalyticReaction schema. The first type is an excel or csv table, and as long as the column headers follow some guidelines, the data can be extracted by NOMAD. The format originated from the clean data project and has been extended to allow a bit more flexibility of the input format. The second supported file type is a hdf5 file, as it is currently produced by the Haber Reactor at the Inorganic Chemistry Department of the Fritz-Haber-Institute and was presented in the publication Advancing catalysis research through FAIR data principles implemented in a local data infrastructure - a case study of an automated test reactor Format of the csv or xlsx data file: \u00b6 For excel files with multiple sheets, only the first sheet is read. If a column is empty, it will be ignored. The following column headers will be recognized and mapped into the NOMAD schema: excel column header description schema quantity catalyst name of the catalyst reactor_filling.catalyst_name sample_id or FHI-ID (unique) identification number of catalyst sample sample[0].lab_id mass (mg) or mass (g) catalyst mass in the reactor reactor_filling.catalyst_mass TOS (*unit*) or time (*unit*) time on stream, unit can be s or min or h reaction_conditions.time_on_stream, results[0].time_on_stream step number of reported measurement point reaction_conditions.runs, results[0].runs x {reagent_name} or x {reagent_name} (%) concentration of reagents at the inlet of the reactor; if in % it will be converted into a fraction, if for that reagent also a conversion is specified, it will also appear in results reaction_conditions.reagents[].name, reaction_conditions.reagents[].fraction_in; (results.reactants_conversion[].fraction_in/name) x_out {name} (%) concentration of reagents or products at the outlet of the reactor results[0].reactants_conversions[].name/fraction_out or results[0].products[].name/fraction_out set_temperature (*unit*) desired or set reactor temperature reaction_conditions.set_temperature temperature (*unit*) reactor temperature, if unit is not K or Kelvin, degree Celsius is assumed results[0].temperature C-balance carbon-balance results[0].c_balance GHSV *unit* Gas Hourly Space Velocity, unit can be 1/h or h^-1 reaction_conditions.gas_hourly_space_velocity WHSV *unit* Weight Hourly Space Velocity, unit can be ml/g/h or ml/(g*h) reaction_conditions.weight_hourly_space_velocity Vflow (*unit*) or flow_rate (*unit) set total gas flow rate, unit can be ml/min or mln reaction_conditions.set_total_flow_rate set_pressure (*unit*) set reactor pressure reaction_conditions.set_pressure pressure (*unit*) reactor pressure results[0].pressure r {name} *unit* reaction rate of reactant or product with name and unit mol/(g*h) or equivalent (mmol,\u00b5mol, minute or s also accepted) results[0].rates[].reaction_rate x_p {name} (%) product based conversion of reactant name in % results[0].reactants_conversions[].conversion_product_based x_r {name} (%) reactant based conversion of reactant name in % results[0].reactants_conversions[].conversion_product_based y {name} (%) product yield of product name results[0].products[].product_yield S_p {name} (%) selectivity of product name in % results[0].products[].selectivity Structure of the hf5 data file: \u00b6 'Header' methodename 'Header' 'Header' 'Raw Data' 'Sorted Data' methodname 'H2 Reduction' 'NH3 Decomposition' hf5 location and label CatalyticReaction schema #### Header ['Header']['Header']['SampleID'][0] lab_id ['Header'][methodname]['Header']: - ['Bulk volume [mln]'] reactor_setup.reactor_volume - ['Inner diameter of reactor (D) [mm]'] reactor_setup.reactor_diameter - ['Diluent material'][0].decode reactor_filling.diluent - ['Diluent Sieve fraction high [um]'] reactor_filling.diluent_sievefraction_upper_limit - ['Diluent Sieve fraction low [um]'] reactor_filling.diluent_sievefraction_lower_limit - ['Catalyst Mass [mg]'][0] reactor_filling.catalyst_mass - ['Sieve fraction high [um]'] reactor_filling.catalyst_sievefraction_upper_limit - ['Sieve fraction low [um]'] reactor_filling.catalyst_sievefraction_lower_limit - ['Particle size (Dp) [mm]'] reactor_filling.particle_size - ['User'][0].decode() experimenter - ['Temporal resolution [Hz]'] reaction_conditions.sampling_frequency #### ['Sorted Data'][methodname]['H2 Reduction'] ['Catalyst Temperature [C\u00b0]'] * ureg.celsius pretreatment.set_temperature ['Massflow3 (H2) Target Calculated Realtime Value [mln|min]'] pretreatment.reagent[0].flow_rate, & name ['Massflow5 (Ar) Target Calculated Realtime Value [mln|min]'] pretreatment.reagent[1].flow_rate & name ['Target Total Gas (After Reactor) [mln|min]'] pretreatment.set_total_flow_rate ['Relative Time [Seconds]'] pretreatment.time_on_stream ['Date'][0].decode() datetime #### ['Sorted Data'][methodname]['NH3 Decomposition'] ['Relative Time [Seconds]'] reaction_conditions.time_on_stream {name} + 'Target Calculated Realtime Value [mln|min]', {name} can be 'NH3_high', 'NH3_low' or the name of the reagent reaction_conditions.reagent[n].name and reaction_conditions.reagent[n].flow_rate {name} + 'Target Setpoint [mln|min]' reaction_conditions.set_total_flow_rate ['W|F [gs|ml]'] reaction_conditions.contact_time ['NH3 Conversion [%]'] results[0].reactants_conversions[0].conversion, results[0].reactants_conversions[0].name = 'ammonia', results[0].reactants_conversions[0].conversion_type='reactant-based' ['Space Time Yield [mmolH2 gcat-1 min-1]'] results[0].rates[0].reaction_rate, results[0].rates[0].name='molecular hydrogen' ['Catalyst Temperature [C\u00b0]'] reaction_conditions.set_temperature, results[0].temperature The following information is currently added by default to entries filled by a hdf5 file from the automated Haber reactor: instance quantity label 'ammonia decomposition' reaction_name 'cracking' reaction_type 'Fritz-Haber-Institut Berlin / Abteilung AC' location molecular hydrogen, molecular nitrogen results.products[n].name 'Haber' reactor_setup.name 'plug flow reactor' reactor_setup.reactor_type 3. Direct generation of json files \u00b6 Another way to generate entries in NOMAD is to place *.archive.json files directly in one upload. The file needs to contain the path to a schema definition and then NOMAD automatically creates the corresponding entry. The archive.json file does not contain unit information, this is only defined and stored in the schema definition and does not need to correspond to the display unit in the GUI. Usually this corresponds to the SI unit of a respective quantity. This can also be double checked in the metainfo browser of the NOMAD installation. { \"data\" : { \"m_def\" : \"nomad_catalysis.schema_packages.catalysis.CatalyticReaction\" , \"name\" : \"Reaction Entry\" , \"reaction_type\" : \"type of reaction\" , \"reaction_name\" : \"Reaction Name\" , \"experimenter\" : \"Name or ORCID\" , \"experiment_handbook\" : , \"lab_id\" : \"a lab_id of the measurment\" , \"location\" : \"location\" , \"reaction_conditions\" : { \"reagents\" : [{ \"name\" : \"reagent1\" , \"flow_rate\" : [ ], \"gas_concentration_in\" : []}, { \"name\" : \"reagent2\" , \"flow_rate\" : [ ], \"gas_concentration_in\" : []} ], \"set_pressure\" : [ 101325.0 ], \"set_temperature\" : [ ], \"set_total_flow_rate\" : [ ], \"contact_time\" : [], \"weight_hourly_space_velocity\" : [], \"time_on_stream\" : [] }, \"reactor_filling\" : { \"catalyst_name\" : \"name of the catalyst\" , \"catalyst_mass\" : nu mber , \"catalyst_volume\" : nu mber , \"diluent\" : \"some diluent\" , \"catalyst_sievefraction_upper_limit\" : , \"catalyst_sievefraction_lower_limit\" : , \"diluent_sievefraction_upper_limit\" : , \"diluent_sievefraction_lower_limit\" : , \"particle_size\" : }, \"reactor_setup\" : { \"name\" : , \"reactor_type\" : , \"bed_length\" : , \"reactor_volume\" : , \"lab_id\" : }, \"results\" : [ { \"products\" : [ { \"name\" : \"product1\" , \"selectivity\" : [ fl oa t _ nu mber ] }, { \"name\" : \"product2\" , \"selectivity\" : [ fl oa t _ nu mber ] } ], \"reactants_conversions\" : [ { \"name\" : \"reactant\" , \"gas_concentration_out\" :[], \"conversion\" : []} ], \"runs\" : [ 1 ], \"temperature\" : [], \"pressure\" :[], \"total_flow_rate\" :[], \"time_on_stream\" :[], } ], \"samples\" : [ { \"lab_id\" : \"lab id\" # i f a sample e ntr y exis ts wi t h t he speci f ied lab_id i t will be au t oma t ically li n ked. } ] } }","title":"Use this Plugin to Create Catalysis Entries"},{"location":"how_to/use_this_plugin.html#how-to-create-catalysis-entries","text":"To create one or more entries in NOMAD through the browser, the user first has to navigate to the \u201cPUBLISH\u201d tab, log into their account (if applicable), then click \u201cCREATE A NEW UPLOAD\u201d. Here, there are 4 main ways to create catalysis entries in the NOMAD / NOMAD Oasis: using the catalysis parser functionality by uploading template conform tables (in csv or xlsx format) manually via the graphical user interface (GUI) using NOMADs ELN functionality dropping archive.json files directly in an upload using the tabular parser, for creating more customized entries and when the data has already been collected in csv or xlsx files First, I will detail how to create entries using the excel parser and explain the structure of the schemas. Later I will add, how to add larger datasets more quickly.","title":"How to Create Catalysis Entries"},{"location":"how_to/use_this_plugin.html#1-using-the-catalysis-parser","text":"The easiest way to generate a number of entries at once is by dropping tabular files (csv/xlsx), which adhere to a provided template format and naming convention into an upload in NOMAD. Templates are provided in the following to generate one or more sample entries from a *CatalystSampleCollection.xlsx file , one or more catalytic measurements in *CatalyticReactionCollection.xlsx file , or for both sample and measurement data in one file as a *CatalysisCollection.xlsx file . For catalytic reactions with e.g. longer time or measurement series one can also upload a *CatalyticReaction.xlsx file directly, or specify the reaction file in a datafile column of a *Collection.xlsx file to add multiple entries at once. Then there are no restrictions on the file name. (For all purposes mentioned here, csv files should work the same as xlsx files.)","title":"1. Using the catalysis parser"},{"location":"how_to/use_this_plugin.html#2-manual-creation-of-entries-from-the-gui","text":"When creating single entries, it may be easiest to manually fill the schemas in the GUI. In the Create from Schema pop-up window one can select a built-in schema from the EntryData Category Catalysis . After entering a unique name for the entry (unique at least within the upload folder) one can create an instance of the selected schema, either a catalyst sample entry or a measurement of a functional catalyst analysis.","title":"2. Manual creation of entries from the GUI"},{"location":"how_to/use_this_plugin.html#the-catalyst-sample-schema","text":"Below you see a fresh instance of a Catalyst Sample entry, which can be filled directly in the GUI.","title":"The Catalyst Sample schema"},{"location":"how_to/use_this_plugin.html#the-catalytic-reaction-schema","text":"Here you see a screenshot of an empty Catalytic Reaction measurement entry.","title":"The Catalytic Reaction schema"},{"location":"how_to/use_this_plugin.html#populate-the-catalyticreaction-schema-from-a-data-file","text":"Currently two types of data files are recognized in the data_file quantity and information is extracted directly to populate the CatalyticReaction schema. The first type is an excel or csv table, and as long as the column headers follow some guidelines, the data can be extracted by NOMAD. The format originated from the clean data project and has been extended to allow a bit more flexibility of the input format. The second supported file type is a hdf5 file, as it is currently produced by the Haber Reactor at the Inorganic Chemistry Department of the Fritz-Haber-Institute and was presented in the publication Advancing catalysis research through FAIR data principles implemented in a local data infrastructure - a case study of an automated test reactor","title":"Populate the CatalyticReaction schema from a data file"},{"location":"how_to/use_this_plugin.html#format-of-the-csv-or-xlsx-data-file","text":"For excel files with multiple sheets, only the first sheet is read. If a column is empty, it will be ignored. The following column headers will be recognized and mapped into the NOMAD schema: excel column header description schema quantity catalyst name of the catalyst reactor_filling.catalyst_name sample_id or FHI-ID (unique) identification number of catalyst sample sample[0].lab_id mass (mg) or mass (g) catalyst mass in the reactor reactor_filling.catalyst_mass TOS (*unit*) or time (*unit*) time on stream, unit can be s or min or h reaction_conditions.time_on_stream, results[0].time_on_stream step number of reported measurement point reaction_conditions.runs, results[0].runs x {reagent_name} or x {reagent_name} (%) concentration of reagents at the inlet of the reactor; if in % it will be converted into a fraction, if for that reagent also a conversion is specified, it will also appear in results reaction_conditions.reagents[].name, reaction_conditions.reagents[].fraction_in; (results.reactants_conversion[].fraction_in/name) x_out {name} (%) concentration of reagents or products at the outlet of the reactor results[0].reactants_conversions[].name/fraction_out or results[0].products[].name/fraction_out set_temperature (*unit*) desired or set reactor temperature reaction_conditions.set_temperature temperature (*unit*) reactor temperature, if unit is not K or Kelvin, degree Celsius is assumed results[0].temperature C-balance carbon-balance results[0].c_balance GHSV *unit* Gas Hourly Space Velocity, unit can be 1/h or h^-1 reaction_conditions.gas_hourly_space_velocity WHSV *unit* Weight Hourly Space Velocity, unit can be ml/g/h or ml/(g*h) reaction_conditions.weight_hourly_space_velocity Vflow (*unit*) or flow_rate (*unit) set total gas flow rate, unit can be ml/min or mln reaction_conditions.set_total_flow_rate set_pressure (*unit*) set reactor pressure reaction_conditions.set_pressure pressure (*unit*) reactor pressure results[0].pressure r {name} *unit* reaction rate of reactant or product with name and unit mol/(g*h) or equivalent (mmol,\u00b5mol, minute or s also accepted) results[0].rates[].reaction_rate x_p {name} (%) product based conversion of reactant name in % results[0].reactants_conversions[].conversion_product_based x_r {name} (%) reactant based conversion of reactant name in % results[0].reactants_conversions[].conversion_product_based y {name} (%) product yield of product name results[0].products[].product_yield S_p {name} (%) selectivity of product name in % results[0].products[].selectivity","title":"Format of the csv or xlsx data file:"},{"location":"how_to/use_this_plugin.html#structure-of-the-hf5-data-file","text":"'Header' methodename 'Header' 'Header' 'Raw Data' 'Sorted Data' methodname 'H2 Reduction' 'NH3 Decomposition' hf5 location and label CatalyticReaction schema #### Header ['Header']['Header']['SampleID'][0] lab_id ['Header'][methodname]['Header']: - ['Bulk volume [mln]'] reactor_setup.reactor_volume - ['Inner diameter of reactor (D) [mm]'] reactor_setup.reactor_diameter - ['Diluent material'][0].decode reactor_filling.diluent - ['Diluent Sieve fraction high [um]'] reactor_filling.diluent_sievefraction_upper_limit - ['Diluent Sieve fraction low [um]'] reactor_filling.diluent_sievefraction_lower_limit - ['Catalyst Mass [mg]'][0] reactor_filling.catalyst_mass - ['Sieve fraction high [um]'] reactor_filling.catalyst_sievefraction_upper_limit - ['Sieve fraction low [um]'] reactor_filling.catalyst_sievefraction_lower_limit - ['Particle size (Dp) [mm]'] reactor_filling.particle_size - ['User'][0].decode() experimenter - ['Temporal resolution [Hz]'] reaction_conditions.sampling_frequency #### ['Sorted Data'][methodname]['H2 Reduction'] ['Catalyst Temperature [C\u00b0]'] * ureg.celsius pretreatment.set_temperature ['Massflow3 (H2) Target Calculated Realtime Value [mln|min]'] pretreatment.reagent[0].flow_rate, & name ['Massflow5 (Ar) Target Calculated Realtime Value [mln|min]'] pretreatment.reagent[1].flow_rate & name ['Target Total Gas (After Reactor) [mln|min]'] pretreatment.set_total_flow_rate ['Relative Time [Seconds]'] pretreatment.time_on_stream ['Date'][0].decode() datetime #### ['Sorted Data'][methodname]['NH3 Decomposition'] ['Relative Time [Seconds]'] reaction_conditions.time_on_stream {name} + 'Target Calculated Realtime Value [mln|min]', {name} can be 'NH3_high', 'NH3_low' or the name of the reagent reaction_conditions.reagent[n].name and reaction_conditions.reagent[n].flow_rate {name} + 'Target Setpoint [mln|min]' reaction_conditions.set_total_flow_rate ['W|F [gs|ml]'] reaction_conditions.contact_time ['NH3 Conversion [%]'] results[0].reactants_conversions[0].conversion, results[0].reactants_conversions[0].name = 'ammonia', results[0].reactants_conversions[0].conversion_type='reactant-based' ['Space Time Yield [mmolH2 gcat-1 min-1]'] results[0].rates[0].reaction_rate, results[0].rates[0].name='molecular hydrogen' ['Catalyst Temperature [C\u00b0]'] reaction_conditions.set_temperature, results[0].temperature The following information is currently added by default to entries filled by a hdf5 file from the automated Haber reactor: instance quantity label 'ammonia decomposition' reaction_name 'cracking' reaction_type 'Fritz-Haber-Institut Berlin / Abteilung AC' location molecular hydrogen, molecular nitrogen results.products[n].name 'Haber' reactor_setup.name 'plug flow reactor' reactor_setup.reactor_type","title":"Structure of the hf5 data file:"},{"location":"how_to/use_this_plugin.html#3-direct-generation-of-json-files","text":"Another way to generate entries in NOMAD is to place *.archive.json files directly in one upload. The file needs to contain the path to a schema definition and then NOMAD automatically creates the corresponding entry. The archive.json file does not contain unit information, this is only defined and stored in the schema definition and does not need to correspond to the display unit in the GUI. Usually this corresponds to the SI unit of a respective quantity. This can also be double checked in the metainfo browser of the NOMAD installation. { \"data\" : { \"m_def\" : \"nomad_catalysis.schema_packages.catalysis.CatalyticReaction\" , \"name\" : \"Reaction Entry\" , \"reaction_type\" : \"type of reaction\" , \"reaction_name\" : \"Reaction Name\" , \"experimenter\" : \"Name or ORCID\" , \"experiment_handbook\" : , \"lab_id\" : \"a lab_id of the measurment\" , \"location\" : \"location\" , \"reaction_conditions\" : { \"reagents\" : [{ \"name\" : \"reagent1\" , \"flow_rate\" : [ ], \"gas_concentration_in\" : []}, { \"name\" : \"reagent2\" , \"flow_rate\" : [ ], \"gas_concentration_in\" : []} ], \"set_pressure\" : [ 101325.0 ], \"set_temperature\" : [ ], \"set_total_flow_rate\" : [ ], \"contact_time\" : [], \"weight_hourly_space_velocity\" : [], \"time_on_stream\" : [] }, \"reactor_filling\" : { \"catalyst_name\" : \"name of the catalyst\" , \"catalyst_mass\" : nu mber , \"catalyst_volume\" : nu mber , \"diluent\" : \"some diluent\" , \"catalyst_sievefraction_upper_limit\" : , \"catalyst_sievefraction_lower_limit\" : , \"diluent_sievefraction_upper_limit\" : , \"diluent_sievefraction_lower_limit\" : , \"particle_size\" : }, \"reactor_setup\" : { \"name\" : , \"reactor_type\" : , \"bed_length\" : , \"reactor_volume\" : , \"lab_id\" : }, \"results\" : [ { \"products\" : [ { \"name\" : \"product1\" , \"selectivity\" : [ fl oa t _ nu mber ] }, { \"name\" : \"product2\" , \"selectivity\" : [ fl oa t _ nu mber ] } ], \"reactants_conversions\" : [ { \"name\" : \"reactant\" , \"gas_concentration_out\" :[], \"conversion\" : []} ], \"runs\" : [ 1 ], \"temperature\" : [], \"pressure\" :[], \"total_flow_rate\" :[], \"time_on_stream\" :[], } ], \"samples\" : [ { \"lab_id\" : \"lab id\" # i f a sample e ntr y exis ts wi t h t he speci f ied lab_id i t will be au t oma t ically li n ked. } ] } }","title":"3. Direct generation of json files"},{"location":"reference/references.html","text":"References \u00b6 List Catalyst Sample Catalytic Reaction Catalysis Collection Parser Entry !!! List of quantities and subsections in Catalyst Sample : name (string quantity) datetime (string quantity) lab_id (string quantity) description (rich text quantity) storing_institution (string quantity) catalyst_type (string quantity) form (string quantity) elemental_composition (SubSection, repeating): element atomic fraction mass fraction components (SubSection, repeating): component label mass mass fraction preparation_details (SubSection): preparation_method(string quantity) preparator preparing institution surface (SubSection): surface_area (float quantity) method_surface_area_determination (string quantity) dispersion (float quantity) !!!List of quantities and subsections in CatalyticReaction : name starting_Time data_file ID reaction_type reaction_name experiment_handbook description location experimenter steps (SubSection, repeating): name start_time comment samples (SubSection, repeating): name reference lab_id instruments (SubSection, label: reactor setup, repeating): name reference lab_id reactor_type bed_length reactor_cross_section_area reactor_diameter reactor_volume reactor_filling (SubSection, repeating): catalyst_name sample_section_reference catalyst_mass catalyst_density catalyst_volume catalyst_sievefraction_upper_limit catalyst_sievefraction_lower_limit particle_size diluent diluent_sievefraction_upper_limit diluent_sievefraction_lower_limit pretreatment (SubSection, repeating): same as reaction conditions below reaction_conditions (SubSection, repeating): set_temperature set_pressure set_total_flow_rate contact_time (label W|F) sampling_frequency time_on_stream weight_hourly_space_velocity gas_hourly_space_velocity runs subsection reagents: name gas_concentration_in flow_rate pure_component: name iupac_name... results (SubSection, repeating): name temperature pressure total_flow_rate runs time_on_stream c_balance reactants_conversions: name gas_concentration_in gas_concentration_out flow_rate conversion conversion_type conversion_product_based conversion_reactant_based pure_component: name iupac_name, ... rates: name reaction_rate specific_mass_rate specific_surface_area_rate rate turn_over_frequency products: name gas_concentration_in flow_rate gas_concentration_out selectivity product_yield space_time_yield pure_component: name iupac_name !!!List of quantities and subsections in CatalysisCollectionParserEntry : data_file samples (SubSection, repeating) measurements (SubSection, repeating)","title":"Reference"},{"location":"reference/references.html#references","text":"List Catalyst Sample Catalytic Reaction Catalysis Collection Parser Entry !!! List of quantities and subsections in Catalyst Sample : name (string quantity) datetime (string quantity) lab_id (string quantity) description (rich text quantity) storing_institution (string quantity) catalyst_type (string quantity) form (string quantity) elemental_composition (SubSection, repeating): element atomic fraction mass fraction components (SubSection, repeating): component label mass mass fraction preparation_details (SubSection): preparation_method(string quantity) preparator preparing institution surface (SubSection): surface_area (float quantity) method_surface_area_determination (string quantity) dispersion (float quantity) !!!List of quantities and subsections in CatalyticReaction : name starting_Time data_file ID reaction_type reaction_name experiment_handbook description location experimenter steps (SubSection, repeating): name start_time comment samples (SubSection, repeating): name reference lab_id instruments (SubSection, label: reactor setup, repeating): name reference lab_id reactor_type bed_length reactor_cross_section_area reactor_diameter reactor_volume reactor_filling (SubSection, repeating): catalyst_name sample_section_reference catalyst_mass catalyst_density catalyst_volume catalyst_sievefraction_upper_limit catalyst_sievefraction_lower_limit particle_size diluent diluent_sievefraction_upper_limit diluent_sievefraction_lower_limit pretreatment (SubSection, repeating): same as reaction conditions below reaction_conditions (SubSection, repeating): set_temperature set_pressure set_total_flow_rate contact_time (label W|F) sampling_frequency time_on_stream weight_hourly_space_velocity gas_hourly_space_velocity runs subsection reagents: name gas_concentration_in flow_rate pure_component: name iupac_name... results (SubSection, repeating): name temperature pressure total_flow_rate runs time_on_stream c_balance reactants_conversions: name gas_concentration_in gas_concentration_out flow_rate conversion conversion_type conversion_product_based conversion_reactant_based pure_component: name iupac_name, ... rates: name reaction_rate specific_mass_rate specific_surface_area_rate rate turn_over_frequency products: name gas_concentration_in flow_rate gas_concentration_out selectivity product_yield space_time_yield pure_component: name iupac_name !!!List of quantities and subsections in CatalysisCollectionParserEntry : data_file samples (SubSection, repeating) measurements (SubSection, repeating)","title":"References"},{"location":"tutorial/tutorial.html","text":"Tutorial \u00b6 Attention TODO","title":"Tutorial"},{"location":"tutorial/tutorial.html#tutorial","text":"Attention TODO","title":"Tutorial"}]}